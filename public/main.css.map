{"version":3,"file":"main.css","mappings":";;;AAAA;EACI;ACCJ;;ACFA;EACI;EACA;EACA;EACA;EACA;EACA;ADKJ;;AEXA;EACI;EACA;AFcJ;;AEXA;EACI;AFcJ;;AEXA;EACI;AFcJ;;AEVA;EACI;AFaJ;;AG5BA;EACI,yBCOQ;EDNR;EACA;EACA;AH+BJ;;AGtBA;EACI,yBCNQ;EDOR;EACA;AHyBJ;;AKzCA;EACI,yBDOQ;ECNR;EAEA;EACA;EACA;AL2CJ;AKxCA;EACI,yBDFQ;ECGR;EAEA;EACA;EACA;ALyCJ;AKtCA;EACI,yBDXQ;ECYR;EAEA;EACA;EACA;ALuCJ;AKnCA;EACI,mBDtBQ;ECuBR;EAEA;EACA;EACA;ALoCJ;AMtEA;;;;;;;;;;;;;EAaC;EACA;EACA;EACA;EACA;EACA;ANwED;;AMtEA;AACA;;EAEC;ANyED;;AMvEA;EACC;AN0ED;;AMxEA;EACC;AN2ED;;AMzEA;EACC;AN4ED;;AM1EA;;EAEC;EACA;AN6ED;;AM3EA;EACC;EACA;AN8ED;;AOvHA;EACI;AP0HJ;;AOxHA;EAEK,mBHEO;EGDP;AP0HL;AQ6aI;ED1iBJ;IAQQ;EPyHN;AACF;;AOrHA;EACI;APwHJ;;ASzIA;EAGI;EACA,mBLEa;EKDb,WLJU;EKMV;EACA;EACA;EACA;ATyIJ;;AStIA;EAEE;ATwIF;;ASrIA;EAEI;EACA;EACA;EACA;ATuIJ;;AU9JA;EAIA;AV8JA;;AU5JA;EACI;EACA;EACA;EACA;EACA;EACA;AV+JJ;;AU7JA;EACE;AVgKF;;AU3JA;EACI;EACA;EACA;AV8JJ;;AU5JA;EAGI,WN5BU;AJyLd;;AWzLA;EACI,mBPIc;EOHd,cPEgB;AJ0LpB;;AWvLA;EAGI;EACA;EACA;AXwLJ;;AYpMA;EACI;EACA;EACA;EACA;AZuMJ;AYrMI;EACI;AZuMR;AYpMI;EACI;AZsMR;;AY/LA;EACI;AZkMJ;AYhMI;EACI;AZkMR;;AY9LA;EACI;AZiMJ;;AY7LA;EAGI;AZ8LJ;;AY5LA;EACE;AZ+LF;AY7LE;EACI;AZ+LN;;AY1LA;EACI;AZ6LJ;AY3LI;EAEI;AZ4LR;AYxLI;EACI;AZ0LR;;AYvLA;EACI;AZ0LJ;AYrLI;EACI;AZuLR;;AaxPA;EACI;EACA;EACA;EACA;Ab2PJ;AazPI;EACI;Ab2PR;AaxPI;EACI;Ab0PR;;AavPA;EACI;EACA;EACA;EACA;EACA;Ab0PJ;;AaxPA;EACI;EACA;EACA;EACA;Ab2PJ;;AazPA;EAEI;Ab2PJ;;AcxRA;EACI;EACA;Ad2RJ;AczRI;EACI;Ad2RR;AcxRI;EACI;Ad0RR;;AcvRA;EACI;EACA;EACA;EACA;Ad0RJ;AcxRI;EACI;Ad0RR;;ActRA;EAGI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AduRJ;;AcrRA;EAEI;EACA;EACA;EACA;AduRJ;;AcrRA;EACI;EACA;EACA;AdwRJ;ActRI;EACI;EACA;AdwRR;AcrRI;EACI;EACA;AduRR;AcpRI;EACI;EACA;AdsRR;;AclRA;EAGI;AdmRJ,C","sources":["webpack://pugframe/./styles/utils/vendors.scss","webpack://pugframe/./styles/main.scss","webpack://pugframe/./styles/utils/mixins.scss","webpack://pugframe/./styles/shared/description.scss","webpack://pugframe/./styles/shared/titles.scss","webpack://pugframe/./styles/utils/variables.scss","webpack://pugframe/./styles/base/font.scss","webpack://pugframe/./styles/base/reset.scss","webpack://pugframe/./styles/base/base.scss","webpack://pugframe/./node_modules/include-media/dist/_include-media.scss","webpack://pugframe/./styles/components/preloader.scss","webpack://pugframe/./styles/layout/navigation.scss","webpack://pugframe/./styles/pages/about/about.scss","webpack://pugframe/./styles/pages/about/content.scss","webpack://pugframe/./styles/pages/about/gallery.scss","webpack://pugframe/./styles/pages/about/highlight.scss"],"sourcesContent":[".dg.ac {\r\n    z-index: 99999 !important;\r\n}",".dg.ac {\n  z-index: 99999 !important;\n}\n\n.about__highlight__media__image, .about__galery__media__image, .navigation, .preloader {\n  height: 100%;\n  left: 0;\n  object-fit: cover;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n\n.about__highlight__lable {\n  font-size: 1.2rem;\n  font-weight: 300;\n}\n\n.about__content__label {\n  font-size: 1.4rem;\n}\n\n.preloader__number, body {\n  font-size: 4rem;\n}\n\n.navigation__list__link {\n  font-size: 4rem;\n}\n\n.preloader__text {\n  font-family: \"Montserrat\";\n  font-size: 5.3rem;\n  text-align: center;\n  line-height: 1;\n}\n\n.about__highlight__title, .about__title {\n  font-family: \"Montserrat\";\n  font-size: 10rem;\n  line-height: 1;\n}\n\n@font-face {\n  font-family: \"Montserrat\";\n  src: url(\"../fonts/monts-regular.woff2\") format(\"woff2\"), url(\"../fonts/monts-regular.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Montserrat\";\n  src: url(\"../fonts/monts-extralight.woff2\") format(\"woff2\"), url(\"../fonts/monts-extralight.woff\") format(\"woff\");\n  font-weight: 200;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Montserrat\";\n  src: url(\"../fonts/monts-light.woff2\") format(\"woff2\"), url(\"../fonts/monts-light.woff\") format(\"woff\");\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap;\n}\n@font-face {\n  font-family: \"Lato\";\n  src: url(\"../fonts/lato-regular.woff2\") format(\"woff2\"), url(\"../fonts/lato-regular.woff\") format(\"woff\");\n  font-weight: normal;\n  font-style: normal;\n  font-display: swap;\n}\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, menu, nav, section {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol, ul {\n  list-style: none;\n}\n\nblockquote, q {\n  quotes: none;\n}\n\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: \"\";\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nhtml {\n  font-size: 0.5208333333vw;\n}\n\nbody {\n  font-family: \"Lato\";\n  font-size: 20px;\n}\n@media (max-width: 768px) {\n  body {\n    font-size: 100px;\n  }\n}\n\na {\n  text-decoration: none;\n}\n\n.preloader {\n  align-items: center;\n  background: #C97164;\n  color: #fff;\n  display: none;\n  justify-content: center;\n  text-align: center;\n  z-index: 3;\n}\n\n.preloader__text {\n  max-width: 90rem;\n}\n\n.preloader__number {\n  bottom: 7.3rem;\n  left: 50%;\n  position: absolute;\n  transform: translate(-50%);\n}\n\n.navigation {\n  z-index: 2;\n}\n\n.navigation__link {\n  font-size: 0;\n  height: 2rem;\n  left: 4rem;\n  position: absolute;\n  top: 4rem;\n  width: 12.8rem;\n}\n\n.navigation__link__icon {\n  display: block;\n}\n\n.navigation__list__item {\n  position: absolute;\n  right: 4rem;\n  top: 4rem;\n}\n\n.navigation__list__link {\n  color: #000;\n}\n\n.about {\n  background: #B2BBC3;\n  color: #37384C;\n}\n\n.about__title {\n  margin: auto;\n  max-width: 107rem;\n  text-align: center;\n}\n\n.about__content {\n  display: flex;\n  justify-content: center;\n  margin: 20rem auto;\n  position: relative;\n}\n.about__content:first-child {\n  margin-top: 0;\n}\n.about__content:last-child {\n  margin-top: 0;\n}\n\n.about__content__wrapper {\n  display: flex;\n}\n.about__content--right .about__content__wrapper {\n  flex-direction: row-reverse;\n}\n\n.about__content__box {\n  display: flex;\n}\n\n.about__content__label {\n  width: 18rem;\n}\n\n.about__content__description {\n  width: 36rem;\n}\n.about__content__description p:not(:first-child) {\n  margin-top: 3rem;\n}\n\n.about__content__media {\n  position: relative;\n}\n.about__content:nth-child(3) .about__content__media {\n  margin-left: 18rem;\n}\n.about__content:nth-child(5) .about__content__media {\n  margin-right: 17.8rem;\n}\n\n.about__content__media__image {\n  object-fit: cover;\n}\n.about__content:nth-child(5) .about__content__media__image {\n  height: 50rem;\n}\n\n.about__gallery {\n  height: 58.6rem;\n  margin: 20rem 0;\n  overflow: hidden;\n  position: relative;\n}\n.about__gallery:first-child {\n  margin-top: 0;\n}\n.about__gallery:last-child {\n  margin-top: 0;\n}\n\n.about__gallery__wrapper {\n  align-items: center;\n  display: flex;\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n.about__gallery__media {\n  height: 43.7rem;\n  margin: 0.4rem;\n  position: relative;\n  width: 30.9rem;\n}\n\n.about__galery__media__image {\n  object-fit: cover;\n}\n\n.about__highlight {\n  height: 104rem;\n  margin: 20rem 0;\n}\n.about__highlight:first-child {\n  margin-top: 0;\n}\n.about__highlight:last-child {\n  margin-top: 0;\n}\n\n.about__highlight__wrapper {\n  height: 104rem;\n  margin: auto;\n  position: relative;\n  width: 144rem;\n}\n.about__highlight:nth-child(4) .about__highlight__wrapper {\n  width: 104rem;\n}\n\n.about__highlight__lable {\n  transform: translate(-50%);\n  top: 20rem;\n  position: absolute;\n  left: 50%;\n  width: 12rem;\n  text-align: center;\n  text-transform: uppercase;\n  letter-spacing: 0.1rem;\n}\n\n.about__highlight__title {\n  position: absolute;\n  transform: translate(-50%, -50%) rotate(90deg);\n  top: 50%;\n  left: 50%;\n}\n\n.about__highlight__media {\n  height: 76rem;\n  position: absolute;\n  width: 54rem;\n}\n.about__highlight:nth-child(4) .about__highlight__media {\n  height: 52.8rem;\n  width: 36rem;\n}\n.about__highlight__media:first-child {\n  left: 0;\n  top: 0;\n}\n.about__highlight__media:last-child {\n  bottom: 0;\n  right: 0;\n}\n\n.about__highlight__media__image {\n  object-fit: cover;\n}","%cover {\r\n    height: 100%;\r\n    left:0;\r\n    object-fit: cover;\r\n    position: absolute;\r\n    top:0;\r\n    width:100%;\r\n}\r\n\r\n@mixin ratio ($height, $width) {\r\n    font-size: 0;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    &:after{\r\n        content: '';\r\n        display: inline-block;\r\n        padding-top: $height / $height * 100%;\r\n        width: 100%;\r\n    }\r\n}","%description-12 {\r\n    font-size: 1.2rem;\r\n    font-weight: 300;\r\n}\r\n\r\n%description-14 {\r\n    font-size: 1.4rem;\r\n}\r\n\r\n%description-16 {\r\n    font-size: 4rem;\r\n}\r\n\r\n\r\n%description-20 {\r\n    font-size: 4rem;\r\n}\r\n","%title-53 {\r\n    font-family: $font-monts;\r\n    font-size: 5.3rem;\r\n    text-align: center;\r\n    line-height: 1;\r\n}\r\n\r\n\r\n%title-60 { \r\n    font-family: $font-monts;\r\n    font-size: 6rem;\r\n}\r\n\r\n%title-100 {\r\n    font-family: $font-monts;\r\n    font-size: 10rem;\r\n    line-height: 1;\r\n}\r\n\r\n%title-120 {\r\n    font-family: $font-monts;\r\n    font-size: 12rem;\r\n}\r\n\r\n%title-200{\r\n    font-family: $font-monts;\r\n    font-size: 20rem;\r\n}","$color-black: #000;\r\n$color-white: #fff;\r\n$color-zircon:#FAFCFF;\r\n\r\n$color-bright-gray: #37384C;\r\n$color-cadet-blue:#B2BBC3;\r\n$color-contessa: #C97164;\r\n$font-lato: 'Lato';\r\n$font-monts:'Montserrat';\r\n\r\n$ease-out-expo: cubic-bezier(0,19,1,0.22, 1);\r\n\r\n$z-indexes: (\r\n    'preloader',\r\n    'navigation',\r\n    'content'\r\n);\r\n","@font-face {\r\n    font-family: $font-monts;\r\n    src: url('../fonts/monts-regular.woff2') format('woff2'),\r\n        url('../fonts/monts-regular.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: $font-monts;\r\n    src: url('../fonts/monts-extralight.woff2') format('woff2'),\r\n        url('../fonts/monts-extralight.woff') format('woff');\r\n    font-weight: 200;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n@font-face {\r\n    font-family: $font-monts;\r\n    src: url('../fonts/monts-light.woff2') format('woff2'),\r\n        url('../fonts/monts-light.woff') format('woff');\r\n    font-weight: 300;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n\r\n@font-face {\r\n    font-family: $font-lato;\r\n    src: url('../fonts/lato-regular.woff2') format('woff2'),\r\n        url('../fonts/lato-regular.woff') format('woff');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n    font-display: swap;\r\n}\r\n\r\n","html, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}","html {\r\n    font-size: calc(100vw/ 1920 * 10)\r\n}\r\nbody{\r\n     @extend %description-16; \r\n     font-family: $font-lato;\r\n     font-size: 20px;\r\n\r\n  \r\n\r\n    @include media('<=phone') {\r\n        font-size: 100px;\r\n    }\r\n\r\n} \r\n\r\na {\r\n    text-decoration: none;\r\n}","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n",".preloader{\r\n    @extend %cover;\r\n\r\n    align-items: center;\r\n    background: $color-contessa;\r\n    color: $color-white;\r\n     //display: flex;\r\n    display: none;\r\n    justify-content: center;\r\n    text-align: center;\r\n    z-index: z('preloader');\r\n\r\n} \r\n.preloader__text{\r\n  @extend %title-53;\r\n  max-width: 90rem;\r\n\r\n}    \r\n.preloader__number{\r\n    @extend %description-16;\r\n    bottom: 7.3rem;\r\n    left:50%;\r\n    position: absolute;\r\n    transform: translate(-50%);\r\n} ",".navigation{\r\n@extend %cover;\r\n\r\n\r\nz-index: z('navigation');    \r\n} \r\n.navigation__link{\r\n    font-size: 0;\r\n    height: 2rem;\r\n    left: 4rem;\r\n    position: absolute;\r\n    top:4rem;\r\n    width: 12.8rem;\r\n}\r\n.navigation__link__icon{\r\n  display: block;     \r\n}\r\n.navigation__list{\r\n    \r\n} \r\n.navigation__list__item{\r\n    position: absolute;\r\n    right: 4rem;\r\n    top:4rem;  \r\n} \r\n.navigation__list__link{\r\n    @extend %description-20;\r\n    // color: $color-zircon;\r\n    color: $color-black;\r\n\r\n\r\n\r\n}",".about{\r\n    background: $color-cadet-blue;\r\n    color: $color-bright-gray;\r\n} \r\n.about__wrapper{\r\n\r\n}\r\n.about__title{\r\n    @extend %title-100;\r\n\r\n    margin:auto;\r\n    max-width: 107rem;\r\n    text-align: center;\r\n}\r\n\r\n\r\n",".about__content{\r\n    display: flex;\r\n    justify-content: center;\r\n    margin:20rem auto;\r\n    position: relative;\r\n\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    &:last-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    // &:nth-child(5) {\r\n    //     justify-content: flex-end;\r\n    // }\r\n} \r\n.about__content__wrapper{\r\n    display: flex;\r\n\r\n    .about__content--right & {\r\n        flex-direction: row-reverse;\r\n    }\r\n} \r\n\r\n.about__content__box {\r\n    display: flex;\r\n}\r\n\r\n\r\n.about__content__label{\r\n    @extend %description-14;\r\n\r\n    width: 18rem;\r\n}\r\n.about__content__description{\r\n  width: 36rem;\r\n\r\n  p:not(:first-child){\r\n      margin-top: 3rem;\r\n  }\r\n}\r\n\r\n\r\n.about__content__media{\r\n    position: relative;\r\n\r\n    .about__content:nth-child(3) & {\r\n        // height: 80.8rem;\r\n        margin-left: 18rem;\r\n        // width: 53.8rem;\r\n    }\r\n\r\n    .about__content:nth-child(5) & {\r\n        margin-right: 17.8rem;\r\n    }\r\n} \r\n.about__content__media__image{\r\n    object-fit: cover;\r\n\r\n    .about__content:nth-child(3) & {\r\n    }\r\n\r\n    .about__content:nth-child(5) & {\r\n        height: 50rem;\r\n\r\n\r\n    }\r\n}\r\n",".about__gallery{\r\n    height: 58.6rem;\r\n    margin:20rem 0;\r\n    overflow: hidden;\r\n    position: relative;\r\n\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    &:last-child {\r\n        margin-top: 0;\r\n    }\r\n}\r\n.about__gallery__wrapper{\r\n    align-items: center;\r\n    display: flex;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n}\r\n.about__gallery__media{\r\n    height: 43.7rem;\r\n    margin:0.4rem;\r\n    position: relative;\r\n    width: 30.9rem;\r\n} \r\n.about__galery__media__image{\r\n    @extend %cover;\r\n    object-fit: cover;\r\n}\r\n",".about__highlight{\r\n    height: 104rem;\r\n    margin:20rem 0;\r\n\r\n    &:first-child {\r\n        margin-top: 0;\r\n    }\r\n\r\n    &:last-child {\r\n        margin-top: 0;\r\n    }\r\n}\r\n.about__highlight__wrapper{\r\n    height: 104rem;\r\n    margin:auto;\r\n    position: relative;\r\n    width:144rem;\r\n\r\n    .about__highlight:nth-child(4) & {\r\n        width: 104rem;\r\n    }\r\n} \r\n\r\n.about__highlight__lable{\r\n    @extend %description-12;\r\n  \r\n    transform: translate(-50%);\r\n    top:20rem;\r\n    position: absolute;\r\n    left: 50%;\r\n    width: 12rem;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.1rem;\r\n}\r\n.about__highlight__title{\r\n    @extend %title-100;\r\n    position: absolute;\r\n    transform: translate(-50%, -50%) rotate(90deg);\r\n    top: 50%;\r\n    left: 50%;\r\n}\r\n.about__highlight__media{\r\n    height: 76rem;\r\n    position: absolute;\r\n    width: 54rem;\r\n    \r\n    .about__highlight:nth-child(4) & {\r\n        height: 52.8rem;\r\n        width: 36rem;\r\n    }\r\n\r\n    &:first-child {\r\n        left: 0;\r\n        top: 0;\r\n    }\r\n\r\n    &:last-child {\r\n        bottom: 0;\r\n        right: 0;\r\n    }\r\n} \r\n\r\n.about__highlight__media__image{\r\n    @extend %cover;\r\n\r\n    object-fit: cover;\r\n}\r\n\r\n"],"names":[],"sourceRoot":""}